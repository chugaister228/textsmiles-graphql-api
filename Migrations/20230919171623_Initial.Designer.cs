// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TextSmiles.API.Data;

#nullable disable

namespace TextSmiles.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230919171623_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("TextSmiles.API.Data.Entities.Emotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TextSmiles.API.Data.Entities.Smile", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EmotionID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("EmotionID");

                    b.HasIndex("UserID");

                    b.ToTable("Smiles");
                });

            modelBuilder.Entity("TextSmiles.API.Data.Entities.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TextSmiles.API.Data.Entities.Smile", b =>
                {
                    b.HasOne("TextSmiles.API.Data.Entities.Emotion", null)
                        .WithMany("Smiles")
                        .HasForeignKey("EmotionID");

                    b.HasOne("TextSmiles.API.Data.Entities.User", null)
                        .WithMany("Smiles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TextSmiles.API.Data.Entities.Emotion", b =>
                {
                    b.Navigation("Smiles");
                });

            modelBuilder.Entity("TextSmiles.API.Data.Entities.User", b =>
                {
                    b.Navigation("Smiles");
                });
#pragma warning restore 612, 618
        }
    }
}
